name: Release Plugin

on:
  push:
    tags:
      - "**" # Trigger on pushes to tags
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history to get previous tags for changelog

      - name: Setup sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: "1.29.0"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Specify a Node.js version

      - name: Download Javy
        run: |
          JAVY_VERSION="v5.0.3"
          wget https://github.com/bytecodealliance/javy/releases/download/${JAVY_VERSION}/javy-x86_64-linux-${JAVY_VERSION}.gz
          gzip -d javy-x86_64-linux-${JAVY_VERSION}.gz
          chmod +x javy-x86_64-linux-${JAVY_VERSION}
          mv javy-x86_64-linux-${JAVY_VERSION} javy

      - name: Install dependencies
        run: npm install

      - name: Typecheck
        run: npx tsc --noEmit

      - name: Build JavaScript
        run: npx esbuild --bundle src/app.ts --tree-shaking=true --format=esm --target=es2020 --outfile=out.js

      - name: Build WASM plugin
        run: ./javy build out.js -o examples/plugin.wasm

      - name: Calculate WASM SHA256 hash
        id: hash_wasm
        run: |
          WASM_FILE="examples/plugin.wasm"
          SHA256_HASH=$(sha256sum $WASM_FILE | awk '{ print $1 }')
          echo "sha256_hash=$SHA256_HASH" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          writeToFile: false

      - name: Create Release Notes
        id: create_release_notes
        run: |
          CURRENT_TAG="${{ github.ref_name }}"
          WASM_HASH="${{ steps.hash_wasm.outputs.sha256_hash }}"
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          WASM_URL="https://github.com/${REPO_OWNER}/${REPO_NAME}/releases/download/${CURRENT_TAG}/plugin.wasm"
          CHANGELOG="${{ steps.changelog.outputs.changes }}"

          RELEASE_NOTES="Configuration\n"
          RELEASE_NOTES+="\`\`\`\n"
          RELEASE_NOTES+="version: '2'\n"
          RELEASE_NOTES+="plugins:\n"
          RELEASE_NOTES+="  name: ts\n"
          RELEASE_NOTES+="  wasm:\n"
          RELEASE_NOTES+="    url: ${WASM_URL}\n"
          RELEASE_NOTES+="    sha256: ${WASM_HASH}\n"
          RELEASE_NOTES+="\`\`\`\n\n"
          RELEASE_NOTES+="${CHANGELOG}"

          # Escape newlines for the output variable
          ESCAPED_RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
          echo "release_notes=$ESCAPED_RELEASE_NOTES" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.create_release_notes.outputs.release_notes }}
          draft: false
          makeLatest: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: examples/plugin.wasm
          asset_name: plugin.wasm
          asset_content_type: application/wasm
